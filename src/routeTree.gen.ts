/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CallbackRouteImport } from './routes/callback'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ArtistArtistIdRouteImport } from './routes/artist.$artistId'
import { Route as AlbumAlbumIdRouteImport } from './routes/album.$albumId'

const CallbackRoute = CallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ArtistArtistIdRoute = ArtistArtistIdRouteImport.update({
  id: '/artist/$artistId',
  path: '/artist/$artistId',
  getParentRoute: () => rootRouteImport,
} as any)
const AlbumAlbumIdRoute = AlbumAlbumIdRouteImport.update({
  id: '/album/$albumId',
  path: '/album/$albumId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/callback': typeof CallbackRoute
  '/album/$albumId': typeof AlbumAlbumIdRoute
  '/artist/$artistId': typeof ArtistArtistIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/callback': typeof CallbackRoute
  '/album/$albumId': typeof AlbumAlbumIdRoute
  '/artist/$artistId': typeof ArtistArtistIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/callback': typeof CallbackRoute
  '/album/$albumId': typeof AlbumAlbumIdRoute
  '/artist/$artistId': typeof ArtistArtistIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/callback' | '/album/$albumId' | '/artist/$artistId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/callback' | '/album/$albumId' | '/artist/$artistId'
  id: '__root__' | '/' | '/callback' | '/album/$albumId' | '/artist/$artistId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CallbackRoute: typeof CallbackRoute
  AlbumAlbumIdRoute: typeof AlbumAlbumIdRoute
  ArtistArtistIdRoute: typeof ArtistArtistIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/artist/$artistId': {
      id: '/artist/$artistId'
      path: '/artist/$artistId'
      fullPath: '/artist/$artistId'
      preLoaderRoute: typeof ArtistArtistIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/album/$albumId': {
      id: '/album/$albumId'
      path: '/album/$albumId'
      fullPath: '/album/$albumId'
      preLoaderRoute: typeof AlbumAlbumIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CallbackRoute: CallbackRoute,
  AlbumAlbumIdRoute: AlbumAlbumIdRoute,
  ArtistArtistIdRoute: ArtistArtistIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
